ETH Native Oberon System 3 Release 2.2 (Stand-alone)

Native Oberon is a self-contained Intel-based PC operating system.

This text describes how to install stand-alone Native Oberon. We recommend
printing it for reference during installation. The stand-alone version is best
installed in a separate partition on the hard disk. A DOS-based version of
Native Oberon is also available, which boots from DOS or Windows 95. Refer to
the separate installation documentation on installing the DOS-based version.

1. HARDWARE REQUIREMENTS

The system runs on the bare PC in 32-bit mode, and does not use the 16-bit
drivers in the PC BIOS, or drivers from other operating systems.

The *minimum* hardware requirements are:
  Processor: 80386
  Math coprocessor: Required
  Bus: ISA, EISA or PCI
  Memory: 4Mb
  Disk space: 2Mb
  Disk controller: IDE, EIDE, ESDI, AHA-1520 or NCR-810
  Display controller: VGA (supported SVGA recommended)
  Diskette: Standard drive supporting 720k/1.44Mb media
  Mouse: Standard PS/2 or serial mouse (3-button recommended)
  Keyboard: US, German, Swiss, UK or Norwegian

The following optional hardware are supported:
  Network controller: 3COM Etherlink III
  Dialup: Standard modem with SLIP internet provider
  Sound: Soundblaster

2. INSTALLATION SOURCE

To install the standalone system, one of the installation diskette images has
to be written to a formatted 1.44Mb diskette. The available images are
(depending on disk controller type):

  ide.dsk - for IDE, EIDE or ESDI disk controller
  aha1520.dsk - for Adaptec 1520 SCSI disk controller
  ncr810.dsk - for NCR 810 SCSI disk controller

The relevant image file is written to a diskette using the DOS rawrite.exe
program or the Unix dd tool. The rawrite.exe program is distributed with Oberon
and the dd tool is standard with all versions of Unix. Note that the install
diskette is a boot diskette that can not be read by DOS.

2.1 Using DOS to create the diskette

Run rawrite.exe and enter the relevant image name (say ide.dsk) when prompted
for a source file name. Assuming that a: is a diskette drive containing a
1.44Mb formatted diskette, enter "a" when prompted for a destination drive. The
diskette image is written to the diskette and verified.

The same procedure can be used on Windows 95/NT or OS/2. (On OS/2 the loaddskf
utility can be used instead of rawrite.exe. Use: "loaddskf ide.dsk a:").

2.2 Using Unix to create the diskette

Place a 1.44Mb formatted diskette in the drive (say /dev/fd0) and enter the
command "dd bs=512 if=ide.dsk of=/dev/fd0" to write the image to the diskette.

3. INSTALLING NATIVE OBERON

The installation diskette contains Oberon-0. This is a ramdisk-based Native
Oberon system which is used to install the basic Native Oberon system on a hard
disk. The basic system is a fully functional Oberon programming environment
containing text and documentation editors and an Oberon compiler. Once the
basic system is installed, optional packages like Gadgets can be installed from
within the system.

Standalone Native Oberon can co-exist with other operating systems on the same
hard disk in three ways:

o Separate bootable partition with boot manager. A boot manager (not supplied)
  allows booting of Oberon or other operating systems.
o Separate bootable partition. Oberon boots directly from the hard disk. The
  other operating system is booted from a diskette.
o Separate non-bootable partition. The Oberon kernel is booted from a diskette
  and then proceeds to load from the hard disk.

3.1 Booting Oberon-0

Boot the installation diskette. It will display "OBERON System 3" and then
display the "OBL>" prompt. Here configuration strings can be entered before
continuing the boot process. The configuration strings have default values for
common devices and the current values are displayed. To correct a string, enter
it again.

If you have a PS/2-type mouse, enter "c" to continue booting. Otherwise, the
mouse type has to be set using a command of the form "MouseType=N". N is a
number from 0-6 specifying which mouse protocol will be used. If you do not
know which protocol your mouse uses, you can safely experiment with different
values. The available protocols are:

  0 Microsoft serial (2-button)
  1 Mouse Systems Corp serial type A
  2 Logitech old serial Type A
  3 Logitech old serial Type B
  4 Mouse Systems Corp serial type B
  5 Logitech serial (newer models)
  6 PS/2 mouse (default)
  
COM1 is the default port for a serial mouse. If the mouse is connected to COM2,
use the command "MousePort=2". If the mouse has only two buttons, use the
command "Buttons=2".

After entering the configuration strings, you can continue with the "c"
command. The screen will go blank, and the diskette will become active again
while the ramdisk is initialized. After a few seconds the Oberon screen will
appear with a colorful pattern on the left, and some text on the right. The
mouse cursor is initially at the top left of the screen. If the mouse is not
functional, retry the whole process with a different mouse protocol. If the
Oberon screen does not appear, see the troubleshooting section.

3.2 User interface concepts

This tutorial section introduces just enough of the concepts of the Oberon user
interface for you to continue the installation process. If you are familiar
with Oberon, you can skip this section.

The initial Oberon screen is divided into two tracks which contain viewers
displaying text or graphics. All text can be edited, and a text can be stored
to or loaded from a file. A text viewer contains a scroll bar at the left and a
menu bar at the top with the title of the text at the left. Clicking with a
mouse button in the scroll bar will reposition the text view. Commands can be
embedded in any text and executed by clicking on them with the middle mouse
button.

If you have just booted Oberon-0, the track on the right will contain two text
viewers. The top one is the system log, which is used by many commands to
display their output. The bottom one displays the text called "Install.Tool",
which contains instructions and commands for the installation process.

The log text will contain something like:
  System.Time dd.mm.yy hh.mm.ss
  ETH Native Oberon (TM)
  System 3 Release 2.2 dd.mm.yy

Point the mouse cursor to the command "System.Time" and click the middle mouse
button. The current time will now be displayed at the end of the log text,
complete with a fresh System.Time command for you to execute. Note: with a
two-button mouse, the Ctrl key functions as the middle mouse button.

Experiment with scrolling a text viewer by clicking with the left, middle and
right buttons in the scrollbar of the bottom viewer. The left button moves the
line next to the cursor to the top of the viewer, the right button moves
backwards in the text. The small horizontal line in the scroll bar displays the
relative position of the current view in the complete text. The middle mouse
button repositions the text so that this line falls under the mouse cursor.

Experiment with entering and deleting text in the system log. Place the text
cursor by clicking the left button in the system log. Type some text into the
log and use the backspace key to delete it.

Press Ctrl-Break. A new viewer called "Trap" will appear at the bottom of the
screen. This type of viewer provides invaluable debugging information whenever
a run-time error occurs in the Oberon system. Experiment with resizing the
viewer by pointing the mouse to the top half of its title bar and then pressing
and holding down the left mouse button. Move the mouse cursor up or down and
then release the left button to resize the viewer. When you have practiced this
a few times, execute the command "System.Close" in the title bar of the trap
viewer to close it.

3.3 Using Oberon-0 to install Oberon

When Oberon-0 starts up, the Install.Tool text is opened, which contains
instructions for installing Oberon.

Step 1 is to prepare a suitable location for the Oberon file system. Two
alternatives are provided. The first is to create a new Oberon partition. To do
this, there must be unused space on the hard disk for a new partition. A
program like PartitionMagic or the freely available FIPS can be used to free up
space used by existing partitions. Partitions of up to 1Gb have been tested,
and larger partitions should present no problem. The second alternative is used
if you already have a Native Oberon partition installed and want to update it
with the newest version.

Step 2 is to copy the Oberon files from the installation boot diskette to the
destination prepared in step 1. If an existing installation is being updated,
files with a .Text, .Tool and .Mod extension will be saved with a .Bak
extension before being overwritten by the new versions. Therefore the original
Oberon.Text configuration file will be available as Oberon.Text.Bak after
updating.

Step 3 is to configure the device drivers and customize some features of the
system. If a driver for your hardware is not listed, try a driver that might be
compatible. For example, if your S3 chipset is not listed, try the S3-805
driver, or fall back to the standard VGA driver. The Install.Tool lists only
the most commonly-used modes of the supported display drivers. Refer to the
MoreDrivers.Tool for additional display modes (e.g. 800x600 resolution).

Step 4 is to create the boot file. The first two alternatives are to create a
bootable partition, with or without a boot manager. The only difference between
these two is that the first will not change the active partition. You have to
use the configuration program of your boot manager to add the Oberon partition
to the boot menu (tested with OS/2, PartitionMagic and Linux Lilo). The other
alternative is to leave the active partition alone, and create a boot diskette
for Oberon.

Step 5 is to reboot the machine to test the installed Oberon system. If Oberon
does not boot correctly, see the troubleshooting section for possible
solutions.

Note that you can use Oberon-0 at any time to reconfigure your existing system.
Boot Oberon-0, and proceed from step 3 in Install.Tool.

3.4 Optional packages

The following optional packages are available. They can be installed from
within Oberon.

Tools: Basic networking, Draw tool and system developer's tools
Pr3Fonts: 300 dpi Oberon Fonts for printing
Pr6Fonts: 600 dpi Oberon Fonts (for PostScript printer only)
Gadgets: Graphical user interface
Web: Gadgets WWW tools (requires Gadgets & Tools)
Documentation: Guides, examples & book (requires Gadgets)
Tutorials: Hypertext tutorials for Gadgets (requires Web)
Applications: Additional applications (requires Gadgets & Tools)

The Tools package contains tools for the basic Oberon system without Gadgets.
Simple line-based illustrations can be created with Draw. The NetSystem can be
used to write Internet applications. A telnet tool and an email tool are
provided. Several additional system developer tools are provided (e.g. the
BootLinker and Decoder). Note that only the 3COM Etherlink III family of
network interface cards (ISA or EISA) is supported. For dialup connections, the
SLIP protocol is supported.

The Pr3Fonts and Pr6Fonts packages are only necessary when a printer driver is
configured. The Pr6Fonts need only be installed to support 600dpi printing with
the PostScript printer driver.

The Gadgets package contains the Gadgets graphical user interface framework and
some standard Gadgets-based applications. Rembrandt is used to edit bitmaps and
Leonardo is used for complex line-based illustrations. All standard
applications are reachable via hyperlinks from the System3.Tool text. The
Gadgets framework supports window tiling (useful for programming or text
editing) and a desktop interface with arbitrary window overlapping.

The Web package contains additional Internet tools: a simple WWW browser, Mail
tool with Oberon document support, FTP tool and Gopher, News and Finger
clients. All the additional tools are reachable from the Network.Tool text. The
Gadgets and Tools packages are required.

The Documentation package contains extensive documentation and examples about
Oberon System 3 and the Gadgets framework and applications, as well as an
electronic copy of the Oberon Companion book. The SamplePrograms.Tool lists the
examples and the Documentation.Tool contains links to all the documentation.
The Gadgets package is required.

The Applications package has several additional applications and games
contributed by ETH students and Oberon users. The Applications.Tool has links
to all the applications. Most of the applications require the Gadgets package,
and some require networking support from the Tools package.

The Tutorials package contains hypertext-based tuturials for the Oberon system.
The Gadgets, Web and Tools packages are required.

3.5 Installing packages

The packages are distributed as Oberon-compressed .arc files. These files must
reside on a DOS-format hard disk or diskette drive during package installation.
This means they have to be copied from the net or the Oberon CD to a local hard
disk or to DOS-formatted diskettes. The following table lists the package file
names and installed size and shows how the files could be distributed on 4
diskettes for further installation.

  PACKAGE        FILENAME       SIZE  DISK
--------------------------------------------
  Tools          tools.arc      900k   1  
  Pr3Fonts       pr3fonts.arc   700k   1  
  Pr6Fonts       pr6fonts.arc  1800k   1  
  Gadgets        gadgets.arc   2700k   2  
  Web            web.arc        800k   3  
  Documentation  docu.arc      1800k   3  
  Tutorials      tutorial.arc  1000k   3  
  Applications   apps.arc      2900k   4  

During installation some temporary disk space is required. Therefore you will
need about 30% more disk space than indicated above (about 18Mb for all
packages). The system source code is also available, and requires about 7Mb
unpacked.

To install one or more packages from within Native Oberon, open the System.Text
with Script (command provided at the top of the System.Tool) and follow the
instructions in the section "Installing the optional packages".

4. ADDITIONAL INSTALLATION INFORMATION

4.1 Appendices in Install.Tool

At the end of the Install.Tool in Oberon-0 there is a link to the
Appendix.Tool, which contains additional commands in Oberon-0. Appendix A can
be used to reactivate the previous operating system if the PC does not boot any
more. Appendix B can be used to recover a Native Oberon file system with a
damaged directory. Appendix C suggests how to send an error report to the
author. Appendix D contains several commands for experts.

4.2 Non-standard disk configurations

If your IDE hard disk controller is not located at the standard addresses (IRQ
14, IO base 1F0H & 3F6H), you can configure the correct values at the initial
OBL> prompt. For example, if the controller is at IRQ 15 and IO base 170H &
376H, enter: "IDE=15,170H,376H". If you do not know what the second IO base
address is, try 3X6H, where X is the middle digit of the first IO base address.
If you use the IDE config string, you also have to specify the disk size
manually using a string like "Disk0=1200Mb" (example for 1.2Gb disk).

Similarly, the AHA1520 driver parameters can be configured at the OBL> prompt.
For example, if the controller is at IRQ 12, port 140H and host id 5, enter:
"AHA1520=12,140H,5". The default values are IRQ 11, port 340H and host id 7.

4.3 Linux LILO boot manager

The Linux LILO boot manager can be used to load Native Oberon. Install Native
Oberon as described above. Then boot Linux, log in as root and run "fdisk -l".
Look for a partition of type 0x4f (the Oberon partition), say /dev/hda2. Edit
/etc/lilo.conf, adding a section like the following:

other=/dev/hda2
  label=Oberon
  loader=/boot/chain.b

Execute "lilo" to initialize the boot manager. It will say "Adding Oberon"
(among other things). Oberon will now appear in the LILO menu when you boot.

Note that you can also boot Native Oberon from a logical drive using LILO. To
do this you must create the Oberon partition using Linux fdisk, and use section
1d of Install.Tool to modify the partition type to 79 when installing.

Native Oberon has also been tested successfully with the OS/2 and
PartitionMagic boot managers. Read the documentation supplied with these
products.

5. TROUBLESHOOTING

5.1 Oberon-0 does not boot

If the "OBERON System 3" message does not appear, or only the first few
characters appear, it is very likely that the install diskette contains bad
sectors. Use another diskette, or reformat it and try again.

If the screen goes blank, and the Oberon display does not appear, there might
be compatability problems between the Native Oberon drivers and your PC. To
help us track down these problems, please do the following:

o Boot with the install diskette.
o At the "OBL>" prompt, enter the following three commands in addition to the
  normal ones: "Display=Empty.", "Init=" and "TraceBPS=-1" (carefully spell
  them exactly as indicated here, without the quotes).
o Enter the "c" command to continue booting.

Some trace information will appear in red on the screen. If a run-time error
occurs, TRAP xx will be displayed and at the end will be a list of module names
with PC = nnn values. It might be possible to infer from this what is causing
the problem. If not, please send the first few lines of the module name
information, as well as the number of the TRAP to us. This will help us to
pinpoint the error in the source code.

If no trace messages appear, it could mean that the CPU type detection is not
functioning on your processor. Override the detection by entering a command of
the form "CPU=n" at the "OBL>" prompt, where n is 3 for a 386, 4 for a 486 and
5 for a Pentium or compatible processor.

5.2 Inconsistent partition table

Oberon-0 is able to detect most large disks correctly. If not, it will report
inconsistencies in the partition table during installation, and refuse to
continue. In that case you can do the following when booting Oberon-0.

At the OBL> prompt, enter "Disk0=auto". If you have two hard disks, also enter
"Disk1=auto". This will use a different detection method for the disk size,
which will work on more disks (but only if they already contain some
partitions). You can also specify the size of the hard disk explicitly using a
string like "Disk0=1200Mb" (example for 1.2Gb disk).

5.3 Black screen when booting Oberon

If the screen stays black when booting a successfully installed system for the
first time, there could be device driver conflicts. First make sure you
followed all the steps in the Install.Tool in Oberon-0 correctly. Then try the
following:

o While booting the installed Oberon system (from boot diskette or partition),
  hold down a shift key or activate ScrollLock. The "OBL>" prompt will appear,
  allowing you to edit the configuration strings.
o Enter the following three commands: "Display=Empty.", "Init=" and
  "TraceBPS=-1" (carefully spell them exactly as indicated here, without the
  quotes).
o Enter the "c" command to continue booting.

As described in the previous section, some trace information will appear on the
screen, which will help to locate the problem.

If the "black screen" symptom occurs after the system has functioned correctly
for some time, the file system might have been corrupted. Boot the install
diskette (Oberon-0). Then execute Install.Directory to see if the directory is
accessible. If this causes a trap, the file directory is corrupt. Reboot
Oberon-0 and use the Scavenger ommands in the Appendix.Tool to rebuild the
directory.

Execute Scavenger.Scan to scan through the whole file system for file headers
and build a new directory in memory (this takes long). Scavenger.Display can
optionally be used to display the list of files found. Then use
Scavenger.WriteDirectory to write the new directory. In case where multiple
versions of a file is found, the Scavenger recovers the file with the latest
time and date. It should therefore only be used as a last resort, and only if
the real-time clock of the PC functions correctly.

If Scavenger.Display can not display all the files found because the Oberon-0
ramdisk is too small, you can configure more ramdisk space. Enter
RamDiskSize=1000 (the size in 2k sectors) at the OBL> prompt. The default size
is 400 sectors.

5.4 Grey screen when booting Oberon

If the installed system seems to boot correctly, but displays a grey screen
instead of the default viewers, there is probably something wrong in
Oberon.Text. Press Ctrl-Break to get a trap viewer to type commands. Check if
the braces and quotes in recently-edited parts of Oberon.Text occur in matching
pairs.

5.5 NetSystem configuration problems

To help trace network configuration problems, the NetSystem modules contain
some global counter variables that can be viewed with System.State ^. The most
useful counters are in the IIIComEther module (the 3Com EtherNet driver). Nsent
counts the number of EtherNet packets sent and Nreceived counts the number of
packets received. There are also Nsent and Nreceived counters in modules IP,
UDP, TCP and DNS.

6. LEGAL INFORMATION

ETH Native Oberon System 3 Release 2.2
Copyright (C) 1990-1997 by Institut fuer Computersysteme ETH Zuerich

Permission to use, copy, modify or distribute this software and its
documentation for any purpose is hereby granted without fee, provided that the
above copyright notice appear in all copies and that both that copyright notice
and this permission notice appear in supporting documentation, and that the
name of ETH not be used in advertising or publicity pertaining to distribution
of the software without specific, written prior permission.

ETH disclaims all warranties with regard to this software, including all
implied special, indirect or consequential damages or any damages whatsoever
resulting from loss of use, data or profits, whether in an action of contract,
negligence or other tortious action, arising out of or in connection with the
use or performance of this software.

Oberon, Native Oberon and Oberon System 3 are trademarks of the Swiss Federal
Institute of Technology Zurich.
PartitionMagic is a trademark of PowerQuest Corporation.
Linux is a trademark of Linus Torvalds.
Microsoft, MS, Windows and MS-DOS are trademarks of Microsoft Corporation.
IBM and OS/2 are trademarks of IBM Corporation.
Iomega and Zip are trademarks of Iomega Corporation.
Intel and Pentium are trademarks of Intel Corporation.

7. CONTACT ADDRESS

For timely information on updates, and moderated discussion, join the Native
Oberon electronic mailing list by sending a message "subscribe native-oberon
FirstName LastName" to listproc@inf.ethz.ch. Replace FirstName and LastName
with your name. Your email address is taken from the reply address of your
mail.

For technical correspondence, please contact:
  Swiss Federal Institute of Technology
  Institute for Computer Systems
  The Oberon System 3 Development Team
  ETH Zentrum
  CH-8092 Zurich
  Switzerland

  email: oberon@inf.ethz.ch
  web: http://www.oberon.ethz.ch/native/
  fax: +41 1 632 1307

Pieter Muller
November, 1997

